//
// Generated file, do not edit! Created by opp_msgc 4.3 from nodes/iec61850/ied/applicationProfile/goose/goose.msg.
//

#ifndef _GOOSE_M_H_
#define _GOOSE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>nodes/iec61850/ied/applicationProfile/goose/goose.msg</tt> by opp_msgc.
 * <pre>
 * packet Goose {
 *     int appid;
 *     int length;
 *     int reserved1;
 *     int reserved2;
 *     
 *     
 *     int tpid;
 *     int vid;
 *     int priority; 
 *     int etherType;
 *     int cfi; 
 *     double timeStamp;
 * 	unsigned char content[];
 * }
 * </pre>
 */
class Goose : public ::cPacket
{
  protected:
    int appid_var;
    int length_var;
    int reserved1_var;
    int reserved2_var;
    int tpid_var;
    int vid_var;
    int priority_var;
    int etherType_var;
    int cfi_var;
    double timeStamp_var;
    unsigned char *content_var; // array ptr
    unsigned int content_arraysize;

  private:
    void copy(const Goose& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Goose&);

  public:
    Goose(const char *name=NULL, int kind=0);
    Goose(const Goose& other);
    virtual ~Goose();
    Goose& operator=(const Goose& other);
    virtual Goose *dup() const {return new Goose(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getAppid() const;
    virtual void setAppid(int appid);
    virtual int getLength() const;
    virtual void setLength(int length);
    virtual int getReserved1() const;
    virtual void setReserved1(int reserved1);
    virtual int getReserved2() const;
    virtual void setReserved2(int reserved2);
    virtual int getTpid() const;
    virtual void setTpid(int tpid);
    virtual int getVid() const;
    virtual void setVid(int vid);
    virtual int getPriority() const;
    virtual void setPriority(int priority);
    virtual int getEtherType() const;
    virtual void setEtherType(int etherType);
    virtual int getCfi() const;
    virtual void setCfi(int cfi);
    virtual double getTimeStamp() const;
    virtual void setTimeStamp(double timeStamp);
    virtual void setContentArraySize(unsigned int size);
    virtual unsigned int getContentArraySize() const;
    virtual unsigned char getContent(unsigned int k) const;
    virtual void setContent(unsigned int k, unsigned char content);
};

inline void doPacking(cCommBuffer *b, Goose& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Goose& obj) {obj.parsimUnpack(b);}


#endif // _GOOSE_M_H_
