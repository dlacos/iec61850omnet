//
// Generated file, do not edit! Created by opp_msgc 4.3 from linklayer/Ieee8021QFrame.msg.
//

#ifndef _IEEE8021QFRAME_M_H_
#define _IEEE8021QFRAME_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "MACAddress.h"
// }}



/**
 * Class generated from <tt>linklayer/Ieee8021QFrame.msg</tt> by opp_msgc.
 * <pre>
 * packet Ieee8021QFrame{
 *     
 * 	MACAddress dest;
 *     MACAddress src;    
 *     unsigned int tpid = 0x8100; 
 *     unsigned int priority;
 *     unsigned int cfi;
 *     unsigned int vid;
 *     unsigned int etherType;
 *     unsigned int frameByteLength;  
 * }
 * </pre>
 */
class Ieee8021QFrame : public ::cPacket
{
  protected:
    MACAddress dest_var;
    MACAddress src_var;
    unsigned int tpid_var;
    unsigned int priority_var;
    unsigned int cfi_var;
    unsigned int vid_var;
    unsigned int etherType_var;
    unsigned int frameByteLength_var;

  private:
    void copy(const Ieee8021QFrame& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Ieee8021QFrame&);

  public:
    Ieee8021QFrame(const char *name=NULL, int kind=0);
    Ieee8021QFrame(const Ieee8021QFrame& other);
    virtual ~Ieee8021QFrame();
    Ieee8021QFrame& operator=(const Ieee8021QFrame& other);
    virtual Ieee8021QFrame *dup() const {return new Ieee8021QFrame(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual MACAddress& getDest();
    virtual const MACAddress& getDest() const {return const_cast<Ieee8021QFrame*>(this)->getDest();}
    virtual void setDest(const MACAddress& dest);
    virtual MACAddress& getSrc();
    virtual const MACAddress& getSrc() const {return const_cast<Ieee8021QFrame*>(this)->getSrc();}
    virtual void setSrc(const MACAddress& src);
    virtual unsigned int getTpid() const;
    virtual void setTpid(unsigned int tpid);
    virtual unsigned int getPriority() const;
    virtual void setPriority(unsigned int priority);
    virtual unsigned int getCfi() const;
    virtual void setCfi(unsigned int cfi);
    virtual unsigned int getVid() const;
    virtual void setVid(unsigned int vid);
    virtual unsigned int getEtherType() const;
    virtual void setEtherType(unsigned int etherType);
    virtual unsigned int getFrameByteLength() const;
    virtual void setFrameByteLength(unsigned int frameByteLength);
};

inline void doPacking(cCommBuffer *b, Ieee8021QFrame& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Ieee8021QFrame& obj) {obj.parsimUnpack(b);}


#endif // _IEEE8021QFRAME_M_H_
